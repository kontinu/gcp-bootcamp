{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to our Bootcamp Hands On \ud83d\udc68\u200d\ud83d\udcbb \u00b6 We prepared these couple guided laboratories as a complement to our Remote Bootcamp, to help you understand some of the services that GCP has to offer. The laboratories are meant to adopt 5 services in order to deploy a simple \"hello-world\" web application GCS cloud storage buckets for storing files and to serve static content. (most easy) GCE VM install everything from scratch and deploy the webapp. (medium) GKE Kubernetes cluster for running the webapp. (hard) App Engine for running the webapp. (easy) Cloud Functions for running the webapp. (easy) Note You will have the option to choose from a Python app or a NodeJS app, the services covered in the labo","title":"Home \ud83c\udfe0"},{"location":"#welcome-to-our-bootcamp-hands-on","text":"We prepared these couple guided laboratories as a complement to our Remote Bootcamp, to help you understand some of the services that GCP has to offer. The laboratories are meant to adopt 5 services in order to deploy a simple \"hello-world\" web application GCS cloud storage buckets for storing files and to serve static content. (most easy) GCE VM install everything from scratch and deploy the webapp. (medium) GKE Kubernetes cluster for running the webapp. (hard) App Engine for running the webapp. (easy) Cloud Functions for running the webapp. (easy) Note You will have the option to choose from a Python app or a NodeJS app, the services covered in the labo","title":"Welcome to our Bootcamp Hands On \ud83d\udc68\u200d\ud83d\udcbb"},{"location":"1.gcs-www/","text":"Lab 1 \u00b6 In this tutorial you will: Point your domain to Cloud Storage by using a CNAME record. Create a bucket that is linked to your domain. Upload and share your site's files. Test the website. Before \u00b6 In the Google Cloud Console, on the project selector page, select or create a Google Cloud project. Note: If you don't plan to keep the resources that you create in this procedure, create a project instead of selecting an existing project. After you finish these steps, you can delete the project, removing all resources associated with the project. Make sure that billing is enabled for your Cloud project. Learn how to confirm that billing is enabled for your project. (Optional) Have a domain that you own or manage. If you don't have an existing domain, there are many services through which you can register a new domain, such as Google Domains. This tutorial uses the domain example.com. Warning You can either use gsutil (cli) or follow example during the session. 1. Creating a bucket \u00b6 Use the gsutil mb command: 1 gsutil mb gs://www.example.com If successful, the command returns: 1 Creating gs://www.example.com/... Go back \ud83c\udfe1 1 teachme tutorial.md","title":"Lab 1\ufe0f\u20e3"},{"location":"1.gcs-www/#lab-1","text":"In this tutorial you will: Point your domain to Cloud Storage by using a CNAME record. Create a bucket that is linked to your domain. Upload and share your site's files. Test the website.","title":"Lab 1"},{"location":"1.gcs-www/#before","text":"In the Google Cloud Console, on the project selector page, select or create a Google Cloud project. Note: If you don't plan to keep the resources that you create in this procedure, create a project instead of selecting an existing project. After you finish these steps, you can delete the project, removing all resources associated with the project. Make sure that billing is enabled for your Cloud project. Learn how to confirm that billing is enabled for your project. (Optional) Have a domain that you own or manage. If you don't have an existing domain, there are many services through which you can register a new domain, such as Google Domains. This tutorial uses the domain example.com. Warning You can either use gsutil (cli) or follow example during the session.","title":"Before"},{"location":"1.gcs-www/#1-creating-a-bucket","text":"Use the gsutil mb command: 1 gsutil mb gs://www.example.com If successful, the command returns: 1 Creating gs://www.example.com/... Go back \ud83c\udfe1 1 teachme tutorial.md","title":"1. Creating a bucket"},{"location":"2.gce/","text":"2. GCE \u00b6 https://medium.com/the-node-js-collection/time-to-hello-world-part2-gce-95e9df907b93 https://cloud.google.com/compute/docs/tutorials/basic-webserver-apache","title":"Lab 2\ufe0f\u20e3"},{"location":"2.gce/#2-gce","text":"https://medium.com/the-node-js-collection/time-to-hello-world-part2-gce-95e9df907b93 https://cloud.google.com/compute/docs/tutorials/basic-webserver-apache","title":"2. GCE"},{"location":"3.gke/","text":"","title":"Lab 3\ufe0f\u20e3"},{"location":"4.app-engine/","text":"","title":"Lab 4\ufe0f\u20e3"},{"location":"5.run/","text":"should it be Cloud Run instead? \u00b6 https://cloud.google.com/run/docs/quickstarts/build-and-deploy/python https://medium.com/the-node-js-collection/time-to-hello-world-part3-gke-9ca38e55eb6d","title":"Lab 5\ufe0f\u20e3"},{"location":"5.run/#should-it-be-cloud-run-instead","text":"https://cloud.google.com/run/docs/quickstarts/build-and-deploy/python https://medium.com/the-node-js-collection/time-to-hello-world-part3-gke-9ca38e55eb6d","title":"should it be Cloud Run instead?"},{"location":"how-to-cloud-shell-tutorial/","text":"Introduction to Writing Tutorials in Cloud Shell \u00b6 Let's get started! \u00b6 Get your users up and running quickly with your project by including an interactive tutorial. This guide will show you how to build your own interactive tutorial (like this one). It'll also walk you through generating a button that users can use to launch your finished tutorial. Time to complete : About 10 minutes Click the Start button to move to the next step. What is Cloud Shell? \u00b6 Before we jump in, let's briefly go over what Cloud Shell can do. Cloud Shell is a personal hosted Virtual Machine which comes pre-loaded with developer tools for Google Cloud products. This interactive shell environment comes with a built-in code editor, persistent disk storage, and web preview functionality. To use command-line access alone, visit console.cloud.google.com/cloudshell . You can direct your users to Cloud Shell to help them quickly get started with your project; giving them an opportunity to step through a use case and familiarize themselves with your project's functionality. Continue on to the next step to start setting up your tutorial. In-context tutorials \u00b6 What you're looking at now is an in-context tutorial. The content is shown along with the Cloud Shell environment where you can carry out the tutorial steps. Having the tutorial and development environment open in the same place makes it easier for your users to start using your project through a straightforward single screen experience. Try running a command now: 1 echo \"Hello Cloud Shell\" Tip : Click the copy button on the side of the code box and paste the command in the Cloud Shell terminal to run it. Next, you\u2019ll write and launch a basic tutorial. Opening the editor \u00b6 You can edit a file stored in Cloud Shell using Cloud Shell\u2019s built-in text editor. To start, open the editor by clicking on the icon. Look at the source file for this tutorial by opening tutorial.md . Try making a change to the file for this tutorial, then saving it using the file menu . To restart the tutorial with your changes, run: 1 cloudshell launch-tutorial -d tutorial.md Next, you will learn how to format the text in a tutorial. Writing in Markdown \u00b6 To write your tutorial, use Markdown and follow these guidelines: Edit the title \u00b6 Modify the title of this tutorial ('# Introduction to writing tutorials in Cloud Shell') by changing it to: 1 # Teach me to write a tutorial Add a new step \u00b6 Next, add a step just after the title like this: 1 2 ## Step 1 This is a new step I\u2019ve just added. Each 'step' of a tutorial is displayed on one page. To move through steps, users use the 'Back' and 'Next' buttons. Add underlying items to a step \u00b6 To list items that are part of a tutorial step under a particular step heading, add them as such: 1 ### This is an item under your first step The tutorial engine also supports Markdown features like links and images. Note, including HTML is not supported . To recap, a title is marked with a level 1 heading, a step with a level 2 heading, and an item with a level 3 heading. Restart to see changes \u00b6 To see your changes, restart the tutorial by running: 1 cloudshell launch-tutorial -d tutorial.md Next up, adding helpful links and icons to your tutorial. Special tutorial features \u00b6 In the Markdown for your tutorial, you may include special directives that are specific to the tutorial engine. These allow you to include helpful shortcuts to actions that you may ask a user to perform. Trigger file actions in the text editor \u00b6 To include a link to open a file for editing , use: 1 2 3 4 <walkthrough-editor-open-file filePath=\"cloud-shell-tutorials/tutorial.md\"> open a file for editing </walkthrough-editor-open-file> Highlight a UI element \u00b6 You can also direct the user\u2019s attention to an element on the screen that you want them to interact with. You may want to show people where to find the web preview icon to view the web server running in their Cloud Shell virtual machine in a new browser tab. Display the web preview icon by including this in your tutorial\u2019s Markdown: 1 2 <walkthrough-web-preview-icon> </walkthrough-web-preview-icon> To create a link that shines a spotlight on the web preview icon , add the following: 1 2 3 4 <walkthrough-spotlight-pointer spotlightId=\"devshell-web-preview-button\"> spotlight on the web preview icon </walkthrough-spotlight-pointer> You can find a list of supported spotlight targets in the documentation for Cloud Shell Tutorials . You've now built a tutorial to help onboard users! Next, you\u2019ll create a button that allows users to launch your tutorial in Cloud Shell. Creating a button for your site \u00b6 Here is how you can create a button for your website, blog, or open source project that will allow users to launch the tutorial you just created. Creating an HTML Button \u00b6 To build a link for the 'Open in Cloud Shell' feature, start with this base HTML and replace the following: YOUR_REPO_URL_HERE with the project repository URL that you'd like cloned for your users in their launched Cloud Shell environment. TUTORIAL_FILE.md with your tutorial\u2019s Markdown file. The path to the file is relative to the root directory of your project repository. 1 2 3 <a href=\"https://console.cloud.google.com/cloudshell/open?git_repo=YOUR_REPO_URL_HERE&tutorial=TUTORIAL_FILE.md\"> <img alt=\"Open in Cloud Shell\" src=\"http://gstatic.com/cloudssh/images/open-btn.png\"> </a> Once you've edited the above HTML with the appropriate values for git_repo and tutorial , use the HTML snippet to generate the 'Open in Cloud Shell' button for your project. Creating a Markdown Button \u00b6 If you are posting the 'Open in Cloud Shell' button in a location that accepts Markdown instead of HTML, use this example instead: 1 [![Open this project in Cloud Shell](http://gstatic.com/cloudssh/images/open-btn.png)](https://console.cloud.google.com/cloudshell/open?git_repo=YOUR_REPO_URL_HERE&page=editor&tutorial=TUTORIAL_FILE.md) Likewise, once you've replaced YOUR_REPO_URL_HERE and TUTORIAL_FILE.md in the 'Open in Cloud Shell' URL as described above, the resulting Markdown snippet can be used to create your button. Congratulations \u00b6 You\u2019re all set! You can now have users launch your tutorial in Cloud Shell and have them start using your project with ease.","title":"Introduction to Writing Tutorials in Cloud Shell"},{"location":"how-to-cloud-shell-tutorial/#introduction-to-writing-tutorials-in-cloud-shell","text":"","title":"Introduction to Writing Tutorials in Cloud Shell"},{"location":"how-to-cloud-shell-tutorial/#lets-get-started","text":"Get your users up and running quickly with your project by including an interactive tutorial. This guide will show you how to build your own interactive tutorial (like this one). It'll also walk you through generating a button that users can use to launch your finished tutorial. Time to complete : About 10 minutes Click the Start button to move to the next step.","title":"Let's get started!"},{"location":"how-to-cloud-shell-tutorial/#what-is-cloud-shell","text":"Before we jump in, let's briefly go over what Cloud Shell can do. Cloud Shell is a personal hosted Virtual Machine which comes pre-loaded with developer tools for Google Cloud products. This interactive shell environment comes with a built-in code editor, persistent disk storage, and web preview functionality. To use command-line access alone, visit console.cloud.google.com/cloudshell . You can direct your users to Cloud Shell to help them quickly get started with your project; giving them an opportunity to step through a use case and familiarize themselves with your project's functionality. Continue on to the next step to start setting up your tutorial.","title":"What is Cloud Shell?"},{"location":"how-to-cloud-shell-tutorial/#in-context-tutorials","text":"What you're looking at now is an in-context tutorial. The content is shown along with the Cloud Shell environment where you can carry out the tutorial steps. Having the tutorial and development environment open in the same place makes it easier for your users to start using your project through a straightforward single screen experience. Try running a command now: 1 echo \"Hello Cloud Shell\" Tip : Click the copy button on the side of the code box and paste the command in the Cloud Shell terminal to run it. Next, you\u2019ll write and launch a basic tutorial.","title":"In-context tutorials"},{"location":"how-to-cloud-shell-tutorial/#opening-the-editor","text":"You can edit a file stored in Cloud Shell using Cloud Shell\u2019s built-in text editor. To start, open the editor by clicking on the icon. Look at the source file for this tutorial by opening tutorial.md . Try making a change to the file for this tutorial, then saving it using the file menu . To restart the tutorial with your changes, run: 1 cloudshell launch-tutorial -d tutorial.md Next, you will learn how to format the text in a tutorial.","title":"Opening the editor"},{"location":"how-to-cloud-shell-tutorial/#writing-in-markdown","text":"To write your tutorial, use Markdown and follow these guidelines:","title":"Writing in Markdown"},{"location":"how-to-cloud-shell-tutorial/#edit-the-title","text":"Modify the title of this tutorial ('# Introduction to writing tutorials in Cloud Shell') by changing it to: 1 # Teach me to write a tutorial","title":"Edit the title"},{"location":"how-to-cloud-shell-tutorial/#add-a-new-step","text":"Next, add a step just after the title like this: 1 2 ## Step 1 This is a new step I\u2019ve just added. Each 'step' of a tutorial is displayed on one page. To move through steps, users use the 'Back' and 'Next' buttons.","title":"Add a new step"},{"location":"how-to-cloud-shell-tutorial/#add-underlying-items-to-a-step","text":"To list items that are part of a tutorial step under a particular step heading, add them as such: 1 ### This is an item under your first step The tutorial engine also supports Markdown features like links and images. Note, including HTML is not supported . To recap, a title is marked with a level 1 heading, a step with a level 2 heading, and an item with a level 3 heading.","title":"Add underlying items to a step"},{"location":"how-to-cloud-shell-tutorial/#restart-to-see-changes","text":"To see your changes, restart the tutorial by running: 1 cloudshell launch-tutorial -d tutorial.md Next up, adding helpful links and icons to your tutorial.","title":"Restart to see changes"},{"location":"how-to-cloud-shell-tutorial/#special-tutorial-features","text":"In the Markdown for your tutorial, you may include special directives that are specific to the tutorial engine. These allow you to include helpful shortcuts to actions that you may ask a user to perform.","title":"Special tutorial features"},{"location":"how-to-cloud-shell-tutorial/#trigger-file-actions-in-the-text-editor","text":"To include a link to open a file for editing , use: 1 2 3 4 <walkthrough-editor-open-file filePath=\"cloud-shell-tutorials/tutorial.md\"> open a file for editing </walkthrough-editor-open-file>","title":"Trigger file actions in the text editor"},{"location":"how-to-cloud-shell-tutorial/#highlight-a-ui-element","text":"You can also direct the user\u2019s attention to an element on the screen that you want them to interact with. You may want to show people where to find the web preview icon to view the web server running in their Cloud Shell virtual machine in a new browser tab. Display the web preview icon by including this in your tutorial\u2019s Markdown: 1 2 <walkthrough-web-preview-icon> </walkthrough-web-preview-icon> To create a link that shines a spotlight on the web preview icon , add the following: 1 2 3 4 <walkthrough-spotlight-pointer spotlightId=\"devshell-web-preview-button\"> spotlight on the web preview icon </walkthrough-spotlight-pointer> You can find a list of supported spotlight targets in the documentation for Cloud Shell Tutorials . You've now built a tutorial to help onboard users! Next, you\u2019ll create a button that allows users to launch your tutorial in Cloud Shell.","title":"Highlight a UI element"},{"location":"how-to-cloud-shell-tutorial/#creating-a-button-for-your-site","text":"Here is how you can create a button for your website, blog, or open source project that will allow users to launch the tutorial you just created.","title":"Creating a button for your site"},{"location":"how-to-cloud-shell-tutorial/#creating-an-html-button","text":"To build a link for the 'Open in Cloud Shell' feature, start with this base HTML and replace the following: YOUR_REPO_URL_HERE with the project repository URL that you'd like cloned for your users in their launched Cloud Shell environment. TUTORIAL_FILE.md with your tutorial\u2019s Markdown file. The path to the file is relative to the root directory of your project repository. 1 2 3 <a href=\"https://console.cloud.google.com/cloudshell/open?git_repo=YOUR_REPO_URL_HERE&tutorial=TUTORIAL_FILE.md\"> <img alt=\"Open in Cloud Shell\" src=\"http://gstatic.com/cloudssh/images/open-btn.png\"> </a> Once you've edited the above HTML with the appropriate values for git_repo and tutorial , use the HTML snippet to generate the 'Open in Cloud Shell' button for your project.","title":"Creating an HTML Button"},{"location":"how-to-cloud-shell-tutorial/#creating-a-markdown-button","text":"If you are posting the 'Open in Cloud Shell' button in a location that accepts Markdown instead of HTML, use this example instead: 1 [![Open this project in Cloud Shell](http://gstatic.com/cloudssh/images/open-btn.png)](https://console.cloud.google.com/cloudshell/open?git_repo=YOUR_REPO_URL_HERE&page=editor&tutorial=TUTORIAL_FILE.md) Likewise, once you've replaced YOUR_REPO_URL_HERE and TUTORIAL_FILE.md in the 'Open in Cloud Shell' URL as described above, the resulting Markdown snippet can be used to create your button.","title":"Creating a Markdown Button"},{"location":"how-to-cloud-shell-tutorial/#congratulations","text":"You\u2019re all set! You can now have users launch your tutorial in Cloud Shell and have them start using your project with ease.","title":"Congratulations"},{"location":"labs/","text":"Welcome to our Bootcamp Hands On \u00b6 You can always follow these tutorials from this link 1. Deploy static website using a gcs bucket \u26c5 \u00b6 1 teachme docs/1.gcs-www.md Extra. Run app first in CloudShell \u00b6 1 teachme docs/x.from-cloud-shell.md 2. Deploying a webapp (hello-world) to a Compute Instance \ud83c\udf27\ufe0f\ud83c\udf27\ufe0f \u00b6 1 teachme docs/2.gce.md 3. Deploying a webapp (hello-world) to a Kubernetes Cluster \u26c8\ufe0f\u26c8\ufe0f\u26c8\ufe0f \u00b6 1 teachme docs/3.gke.md 4. Deploy a webapp (hello-world) via App Engine \u26c5 \u00b6 1 teachme docs/4.app-engine.md 5. Deploy the same webapp (hello-world) via Cloud Run \u26c5 \u00b6 1 teachme docs/5.run.md","title":"Home \ud83c\udfe0"},{"location":"labs/#welcome-to-our-bootcamp-hands-on","text":"You can always follow these tutorials from this link","title":"Welcome to our Bootcamp Hands On"},{"location":"labs/#1-deploy-static-website-using-a-gcs-bucket","text":"1 teachme docs/1.gcs-www.md","title":"1. Deploy static website using a gcs bucket \u26c5"},{"location":"labs/#extra-run-app-first-in-cloudshell","text":"1 teachme docs/x.from-cloud-shell.md","title":"Extra. Run app first in CloudShell"},{"location":"labs/#2-deploying-a-webapp-hello-world-to-a-compute-instance","text":"1 teachme docs/2.gce.md","title":"2. Deploying a webapp (hello-world) to a Compute Instance \ud83c\udf27\ufe0f\ud83c\udf27\ufe0f"},{"location":"labs/#3-deploying-a-webapp-hello-world-to-a-kubernetes-cluster","text":"1 teachme docs/3.gke.md","title":"3. Deploying a webapp (hello-world) to a Kubernetes Cluster \u26c8\ufe0f\u26c8\ufe0f\u26c8\ufe0f"},{"location":"labs/#4-deploy-a-webapp-hello-world-via-app-engine","text":"1 teachme docs/4.app-engine.md","title":"4. Deploy a webapp (hello-world) via App Engine \u26c5"},{"location":"labs/#5-deploy-the-same-webapp-hello-world-via-cloud-run","text":"1 teachme docs/5.run.md","title":"5. Deploy the same webapp (hello-world) via Cloud Run \u26c5"},{"location":"x.from-cloud-shell/","text":"Running our app for the first in cloud-shell \u00b6 Primer on Cloud Shell \u00b6 Cloud Shell is an online development and operations environment accessible anywhere with your browser. You can manage your resources with its online terminal preloaded with utilities such as the gcloud command-line tool, kubectl, and more. You can also develop, build, debug, and deploy your cloud-based apps using the online Cloud Shell Editor. Manage your Google Cloud resources with the flexibility of a Linux shell. Cloud Shell provides command-line access to a virtual machine instance in a terminal window. Many of your favorite command-line tools from bash and sh to emacs and vim are already pre-installed and kept up to date with Cloud Shell. Admin and development tools such as the gcloud command-line tool, MySql, Kubernetes, Docker, minikube, and Skaffold are configured and ready to use Getting Started \u00b6 Make sure you are in the right directory cd ~/gcp-bootcamp There are two versions of the app: Python3 NodeJs We can actually run the app purely using python3 app.py or node app.js but this is the magic of docker, you don't need to install anything other than docker. Also we can isolate different workload types in the same machine disregarding the app dependencies. Docker build the app \u00b6 There seems to be a problem with OpenSSL, docker-compose and cloud-shell, to fix it run: 1 export LD_LIBRARY_PATH=/usr/local/lib 1 2 3 4 5 6 7 # at this point we can build the app using docker build or docker-compose build # using docker-compose (recommended and will build python app) docker-compose build # you want to build the nodejs app? PROJECT_LANG = nodejs docker-compose build Run the app \u00b6 1 docker-compose up All together: 1 docker-compose up --build View the app \u00b6 Menu > Web Preview > Preview on Port 8080","title":"Extra \ud83d\ude80"},{"location":"x.from-cloud-shell/#running-our-app-for-the-first-in-cloud-shell","text":"","title":"Running our app for the first in cloud-shell"},{"location":"x.from-cloud-shell/#primer-on-cloud-shell","text":"Cloud Shell is an online development and operations environment accessible anywhere with your browser. You can manage your resources with its online terminal preloaded with utilities such as the gcloud command-line tool, kubectl, and more. You can also develop, build, debug, and deploy your cloud-based apps using the online Cloud Shell Editor. Manage your Google Cloud resources with the flexibility of a Linux shell. Cloud Shell provides command-line access to a virtual machine instance in a terminal window. Many of your favorite command-line tools from bash and sh to emacs and vim are already pre-installed and kept up to date with Cloud Shell. Admin and development tools such as the gcloud command-line tool, MySql, Kubernetes, Docker, minikube, and Skaffold are configured and ready to use","title":"Primer on Cloud Shell"},{"location":"x.from-cloud-shell/#getting-started","text":"Make sure you are in the right directory cd ~/gcp-bootcamp There are two versions of the app: Python3 NodeJs We can actually run the app purely using python3 app.py or node app.js but this is the magic of docker, you don't need to install anything other than docker. Also we can isolate different workload types in the same machine disregarding the app dependencies.","title":"Getting Started"},{"location":"x.from-cloud-shell/#docker-build-the-app","text":"There seems to be a problem with OpenSSL, docker-compose and cloud-shell, to fix it run: 1 export LD_LIBRARY_PATH=/usr/local/lib 1 2 3 4 5 6 7 # at this point we can build the app using docker build or docker-compose build # using docker-compose (recommended and will build python app) docker-compose build # you want to build the nodejs app? PROJECT_LANG = nodejs docker-compose build","title":"Docker build the app"},{"location":"x.from-cloud-shell/#run-the-app","text":"1 docker-compose up All together: 1 docker-compose up --build","title":"Run the app"},{"location":"x.from-cloud-shell/#view-the-app","text":"Menu > Web Preview > Preview on Port 8080","title":"View the app"}]}